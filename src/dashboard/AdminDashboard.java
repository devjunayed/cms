/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dashboard;

import homepage.HomePage;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import admin.AdminLogin;
import static admin.AdminLogin.passEmailAddress;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Junayed
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    AdminLogin ar1 = new AdminLogin();
    String email = ar1.passEmailAddress;
    String username;
    String filename;

    public AdminDashboard() {
        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        try {
            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);

            String query1 = "Select username from `cms`.`admin` where email=?";
            PreparedStatement st = con.prepareStatement(query1);

            st.setString(1, passEmailAddress);

            ResultSet result = st.executeQuery(); // record added. 

            while (result.next()) {
                username = result.getString("username");
            }
        } catch (Exception e) {

        }
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopUp = new javax.swing.JPopupMenu();
        Settings = new javax.swing.JMenuItem();
        Logout = new javax.swing.JMenuItem();
        header_panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        admin_logo = new javax.swing.JLabel();
        dab_text = new javax.swing.JLabel();
        log_user = new javax.swing.JLabel();
        left_menu = new javax.swing.JPanel();
        lm_allContent = new javax.swing.JPanel();
        lm_ac_text = new javax.swing.JLabel();
        lm_addContent = new javax.swing.JPanel();
        lm_adc_text = new javax.swing.JLabel();
        lm_authors = new javax.swing.JPanel();
        lm_a_text = new javax.swing.JLabel();
        lm_previewContent = new javax.swing.JPanel();
        lm_pc_text = new javax.swing.JLabel();
        lm_newAuthors = new javax.swing.JPanel();
        lm_na_text = new javax.swing.JLabel();
        Menu = new javax.swing.JTabbedPane();
        dashboard = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        all_content = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        all_cont_title = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        all_cont_desc = new javax.swing.JTextArea();
        all_cont_update = new javax.swing.JButton();
        all_cont_delete = new javax.swing.JButton();
        add_content = new javax.swing.JPanel();
        add_title = new javax.swing.JLabel();
        add_title_input = new javax.swing.JTextField();
        add_description = new javax.swing.JLabel();
        add_image = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        add_description_input = new javax.swing.JTextArea();
        add_content_submit = new javax.swing.JButton();
        attach_image = new javax.swing.JButton();
        path = new javax.swing.JLabel();
        preveiw_content = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        authors = new javax.swing.JPanel();
        all_author_delete = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        all_author_table = new javax.swing.JTable();
        new_authors = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        newAuthorTable = new javax.swing.JTable();
        add_new_approve = new javax.swing.JButton();
        add_new_disapprove = new javax.swing.JButton();
        addab_settings = new javax.swing.JPanel();
        settings_text = new javax.swing.JLabel();

        PopUp.setBackground(new java.awt.Color(0, 0, 0));

        Settings.setText("Settings");
        Settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SettingsMouseClicked(evt);
            }
        });
        Settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsActionPerformed(evt);
            }
        });
        PopUp.add(Settings);

        Logout.setBackground(new java.awt.Color(0, 0, 0));
        Logout.setText("Log out");
        Logout.setPreferredSize(new java.awt.Dimension(100, 17));
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        PopUp.add(Logout);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header_panel.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Serif", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Hello,");

        admin_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/avatar.png"))); // NOI18N
        admin_logo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        admin_logo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        admin_logo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admin_logoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                admin_logoMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                admin_logoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                admin_logoMouseReleased(evt);
            }
        });

        dab_text.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 18)); // NOI18N
        dab_text.setForeground(new java.awt.Color(204, 204, 204));
        dab_text.setText("Dashboard");
        dab_text.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dab_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dab_textMouseClicked(evt);
            }
        });

        log_user.setFont(new java.awt.Font("Serif", 3, 14)); // NOI18N
        log_user.setForeground(new java.awt.Color(255, 255, 255));
        log_user.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        log_user.setText(username);

        javax.swing.GroupLayout header_panelLayout = new javax.swing.GroupLayout(header_panel);
        header_panel.setLayout(header_panelLayout);
        header_panelLayout.setHorizontalGroup(
            header_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header_panelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(dab_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 692, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(log_user, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(admin_logo)
                .addGap(40, 40, 40))
        );
        header_panelLayout.setVerticalGroup(
            header_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, header_panelLayout.createSequentialGroup()
                .addGroup(header_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(header_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(admin_logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(header_panelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(header_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(dab_text)
                            .addComponent(log_user, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(header_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 65));

        left_menu.setBackground(new java.awt.Color(51, 51, 51));

        lm_allContent.setBackground(new java.awt.Color(204, 204, 204));
        lm_allContent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lm_allContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_allContentMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lm_allContentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lm_allContentMouseExited(evt);
            }
        });

        lm_ac_text.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        lm_ac_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lm_ac_text.setText("All Content");
        lm_ac_text.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lm_ac_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_ac_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lm_allContentLayout = new javax.swing.GroupLayout(lm_allContent);
        lm_allContent.setLayout(lm_allContentLayout);
        lm_allContentLayout.setHorizontalGroup(
            lm_allContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lm_allContentLayout.createSequentialGroup()
                .addComponent(lm_ac_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        lm_allContentLayout.setVerticalGroup(
            lm_allContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lm_ac_text, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        lm_addContent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lm_addContent.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lm_addContentMouseMoved(evt);
            }
        });
        lm_addContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_addContentMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lm_addContentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lm_addContentMouseExited(evt);
            }
        });

        lm_adc_text.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        lm_adc_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lm_adc_text.setText("Add Content");

        javax.swing.GroupLayout lm_addContentLayout = new javax.swing.GroupLayout(lm_addContent);
        lm_addContent.setLayout(lm_addContentLayout);
        lm_addContentLayout.setHorizontalGroup(
            lm_addContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lm_addContentLayout.createSequentialGroup()
                .addComponent(lm_adc_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        lm_addContentLayout.setVerticalGroup(
            lm_addContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lm_adc_text, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        lm_authors.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lm_authors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_authorsMouseClicked(evt);
            }
        });

        lm_a_text.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        lm_a_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lm_a_text.setText("Authors");
        lm_a_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_a_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lm_authorsLayout = new javax.swing.GroupLayout(lm_authors);
        lm_authors.setLayout(lm_authorsLayout);
        lm_authorsLayout.setHorizontalGroup(
            lm_authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lm_authorsLayout.createSequentialGroup()
                .addComponent(lm_a_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        lm_authorsLayout.setVerticalGroup(
            lm_authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lm_a_text, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
        );

        lm_previewContent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lm_previewContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_previewContentMouseClicked(evt);
            }
        });

        lm_pc_text.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        lm_pc_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lm_pc_text.setText("Preview Content");

        javax.swing.GroupLayout lm_previewContentLayout = new javax.swing.GroupLayout(lm_previewContent);
        lm_previewContent.setLayout(lm_previewContentLayout);
        lm_previewContentLayout.setHorizontalGroup(
            lm_previewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lm_previewContentLayout.createSequentialGroup()
                .addComponent(lm_pc_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        lm_previewContentLayout.setVerticalGroup(
            lm_previewContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lm_pc_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        lm_newAuthors.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lm_newAuthors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_newAuthorsMouseClicked(evt);
            }
        });

        lm_na_text.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        lm_na_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lm_na_text.setText("New Authors");
        lm_na_text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lm_na_textMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lm_newAuthorsLayout = new javax.swing.GroupLayout(lm_newAuthors);
        lm_newAuthors.setLayout(lm_newAuthorsLayout);
        lm_newAuthorsLayout.setHorizontalGroup(
            lm_newAuthorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lm_newAuthorsLayout.createSequentialGroup()
                .addComponent(lm_na_text, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );
        lm_newAuthorsLayout.setVerticalGroup(
            lm_newAuthorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lm_na_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout left_menuLayout = new javax.swing.GroupLayout(left_menu);
        left_menu.setLayout(left_menuLayout);
        left_menuLayout.setHorizontalGroup(
            left_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(left_menuLayout.createSequentialGroup()
                .addGroup(left_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lm_previewContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lm_addContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lm_allContent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lm_newAuthors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lm_authors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        left_menuLayout.setVerticalGroup(
            left_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(left_menuLayout.createSequentialGroup()
                .addComponent(lm_allContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lm_addContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lm_previewContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lm_authors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lm_newAuthors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 361, Short.MAX_VALUE))
        );

        getContentPane().add(left_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 65, 190, 682));

        Menu.setBackground(new java.awt.Color(255, 255, 255));

        dashboard.setBackground(new java.awt.Color(255, 255, 255));
        dashboard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel7.setText("Dashboard");
        dashboard.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 280, 110));

        Menu.addTab("tab1", dashboard);

        all_content.setBackground(new java.awt.Color(255, 255, 255));
        all_content.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                all_contentMouseClicked(evt);
            }
        });

        table.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        table.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SL", "Title", "Author", "Like", "Dislike", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setIntercellSpacing(new java.awt.Dimension(3, 3));
        table.setRowHeight(30);
        table.setShowGrid(true);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(0).setPreferredWidth(60);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(1).setPreferredWidth(300);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(2).setPreferredWidth(200);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(3).setPreferredWidth(150);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(4).setPreferredWidth(150);
            table.getColumnModel().getColumn(5).setResizable(false);
        }

        all_cont_title.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        all_cont_desc.setColumns(20);
        all_cont_desc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        all_cont_desc.setLineWrap(true);
        all_cont_desc.setRows(5);
        jScrollPane3.setViewportView(all_cont_desc);

        all_cont_update.setBackground(new java.awt.Color(102, 204, 0));
        all_cont_update.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        all_cont_update.setForeground(new java.awt.Color(255, 255, 255));
        all_cont_update.setText("Update");
        all_cont_update.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        all_cont_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        all_cont_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_cont_updateActionPerformed(evt);
            }
        });

        all_cont_delete.setBackground(new java.awt.Color(255, 0, 0));
        all_cont_delete.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        all_cont_delete.setForeground(new java.awt.Color(255, 255, 255));
        all_cont_delete.setText("Delete");
        all_cont_delete.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        all_cont_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        all_cont_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_cont_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout all_contentLayout = new javax.swing.GroupLayout(all_content);
        all_content.setLayout(all_contentLayout);
        all_contentLayout.setHorizontalGroup(
            all_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(all_contentLayout.createSequentialGroup()
                .addGroup(all_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(all_contentLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(all_cont_update, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(all_cont_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(all_contentLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(all_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                            .addComponent(all_cont_title)
                            .addComponent(jScrollPane3))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        all_contentLayout.setVerticalGroup(
            all_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(all_contentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(all_cont_title, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(all_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(all_cont_update, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(all_cont_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        Menu.addTab("tab2", all_content);

        add_content.setBackground(new java.awt.Color(255, 255, 255));

        add_title.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        add_title.setText("Add Title");

        add_title_input.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add_title_input.setToolTipText("Enter your title");
        add_title_input.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        add_description.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        add_description.setText("Add Description");

        add_image.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        add_image.setText("Add Image");

        add_description_input.setColumns(20);
        add_description_input.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add_description_input.setLineWrap(true);
        add_description_input.setRows(5);
        add_description_input.setToolTipText("Enter your description");
        add_description_input.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setViewportView(add_description_input);

        add_content_submit.setBackground(new java.awt.Color(204, 204, 204));
        add_content_submit.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        add_content_submit.setText("SUBMIT");
        add_content_submit.setToolTipText("Submit now");
        add_content_submit.setAlignmentY(0.0F);
        add_content_submit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add_content_submit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_content_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_content_submitActionPerformed(evt);
            }
        });

        attach_image.setBackground(new java.awt.Color(255, 255, 255));
        attach_image.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        attach_image.setForeground(new java.awt.Color(204, 204, 204));
        attach_image.setText("+");
        attach_image.setAlignmentY(0.0F);
        attach_image.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        attach_image.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        attach_image.setIconTextGap(0);
        attach_image.setInheritsPopupMenu(true);
        attach_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attach_imageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout add_contentLayout = new javax.swing.GroupLayout(add_content);
        add_content.setLayout(add_contentLayout);
        add_contentLayout.setHorizontalGroup(
            add_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_contentLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(add_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(attach_image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addComponent(add_image, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_description, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_title, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_title_input)
                    .addComponent(path, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_content_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        add_contentLayout.setVerticalGroup(
            add_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_contentLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(add_title, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(add_title_input, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(add_description, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(add_image, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(attach_image, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(path)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(add_content_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        Menu.addTab("tab3", add_content);

        preveiw_content.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel10.setText("Preview Content");

        javax.swing.GroupLayout preveiw_contentLayout = new javax.swing.GroupLayout(preveiw_content);
        preveiw_content.setLayout(preveiw_contentLayout);
        preveiw_contentLayout.setHorizontalGroup(
            preveiw_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preveiw_contentLayout.createSequentialGroup()
                .addContainerGap(295, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
        );
        preveiw_contentLayout.setVerticalGroup(
            preveiw_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preveiw_contentLayout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(305, Short.MAX_VALUE))
        );

        Menu.addTab("tab4", preveiw_content);

        authors.setBackground(new java.awt.Color(255, 255, 255));
        authors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                authorsMouseClicked(evt);
            }
        });

        all_author_delete.setBackground(new java.awt.Color(255, 0, 0));
        all_author_delete.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        all_author_delete.setForeground(new java.awt.Color(255, 255, 255));
        all_author_delete.setText("Delete");
        all_author_delete.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        all_author_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        all_author_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_author_deleteActionPerformed(evt);
            }
        });

        all_author_table.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        all_author_table.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        all_author_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SL", "Author Name", "Author Email", "Total Content", "Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        all_author_table.setIntercellSpacing(new java.awt.Dimension(3, 3));
        all_author_table.setRowHeight(30);
        all_author_table.setShowGrid(true);
        all_author_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                all_author_tableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(all_author_table);
        if (all_author_table.getColumnModel().getColumnCount() > 0) {
            all_author_table.getColumnModel().getColumn(0).setResizable(false);
            all_author_table.getColumnModel().getColumn(0).setPreferredWidth(60);
            all_author_table.getColumnModel().getColumn(1).setResizable(false);
            all_author_table.getColumnModel().getColumn(1).setPreferredWidth(300);
            all_author_table.getColumnModel().getColumn(2).setResizable(false);
            all_author_table.getColumnModel().getColumn(2).setPreferredWidth(500);
            all_author_table.getColumnModel().getColumn(3).setResizable(false);
            all_author_table.getColumnModel().getColumn(3).setPreferredWidth(200);
            all_author_table.getColumnModel().getColumn(4).setResizable(false);
            all_author_table.getColumnModel().getColumn(4).setPreferredWidth(200);
        }

        javax.swing.GroupLayout authorsLayout = new javax.swing.GroupLayout(authors);
        authors.setLayout(authorsLayout);
        authorsLayout.setHorizontalGroup(
            authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authorsLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, authorsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(all_author_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(324, 324, 324))
        );
        authorsLayout.setVerticalGroup(
            authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authorsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(all_author_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        Menu.addTab("tab6", authors);

        new_authors.setBackground(new java.awt.Color(255, 255, 255));
        new_authors.setForeground(new java.awt.Color(255, 255, 255));
        new_authors.setToolTipText("");
        new_authors.setDoubleBuffered(false);
        new_authors.setEnabled(false);
        new_authors.setFocusable(false);
        new_authors.setOpaque(false);
        new_authors.setRequestFocusEnabled(false);
        new_authors.setVerifyInputWhenFocusTarget(false);

        newAuthorTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        newAuthorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SL", "Username", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        newAuthorTable.setAlignmentX(0.0F);
        newAuthorTable.setAlignmentY(0.0F);
        newAuthorTable.setRowHeight(30);
        newAuthorTable.setRowMargin(0);
        newAuthorTable.setShowGrid(true);
        newAuthorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newAuthorTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(newAuthorTable);
        if (newAuthorTable.getColumnModel().getColumnCount() > 0) {
            newAuthorTable.getColumnModel().getColumn(0).setResizable(false);
            newAuthorTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            newAuthorTable.getColumnModel().getColumn(1).setResizable(false);
            newAuthorTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            newAuthorTable.getColumnModel().getColumn(2).setResizable(false);
            newAuthorTable.getColumnModel().getColumn(2).setPreferredWidth(500);
        }

        add_new_approve.setBackground(new java.awt.Color(102, 204, 0));
        add_new_approve.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        add_new_approve.setForeground(new java.awt.Color(255, 255, 255));
        add_new_approve.setText("Approve");
        add_new_approve.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add_new_approve.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_new_approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_new_approveActionPerformed(evt);
            }
        });

        add_new_disapprove.setBackground(new java.awt.Color(255, 0, 0));
        add_new_disapprove.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        add_new_disapprove.setForeground(new java.awt.Color(255, 255, 255));
        add_new_disapprove.setText("Disapprove");
        add_new_disapprove.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add_new_disapprove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_new_disapprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_new_disapproveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout new_authorsLayout = new javax.swing.GroupLayout(new_authors);
        new_authors.setLayout(new_authorsLayout);
        new_authorsLayout.setHorizontalGroup(
            new_authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_authorsLayout.createSequentialGroup()
                .addGroup(new_authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(new_authorsLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(new_authorsLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(add_new_approve, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addComponent(add_new_disapprove, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        new_authorsLayout.setVerticalGroup(
            new_authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_authorsLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(new_authorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_new_approve, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_new_disapprove, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        Menu.addTab("tab7", new_authors);

        settings_text.setText("Settings");

        javax.swing.GroupLayout addab_settingsLayout = new javax.swing.GroupLayout(addab_settings);
        addab_settings.setLayout(addab_settingsLayout);
        addab_settingsLayout.setHorizontalGroup(
            addab_settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addab_settingsLayout.createSequentialGroup()
                .addGap(384, 384, 384)
                .addComponent(settings_text)
                .addContainerGap(383, Short.MAX_VALUE))
        );
        addab_settingsLayout.setVerticalGroup(
            addab_settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addab_settingsLayout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addComponent(settings_text)
                .addContainerGap(343, Short.MAX_VALUE))
        );

        Menu.addTab("tab8", addab_settings);

        getContentPane().add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 820, 670));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void showPopUp(MouseEvent e) {
        PopUp.show(this, 890, 90);
    }
//    
    private void admin_logoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_logoMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_admin_logoMouseClicked

    private void admin_logoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_logoMouseEntered
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            showPopUp(evt);
        }
    }//GEN-LAST:event_admin_logoMouseEntered

    private void admin_logoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_logoMousePressed
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            showPopUp(evt);
        }
    }//GEN-LAST:event_admin_logoMousePressed

    private void admin_logoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_logoMouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            showPopUp(evt);
        }
    }//GEN-LAST:event_admin_logoMouseReleased

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        HomePage i = new HomePage();
        i.setVisible(true);
    }//GEN-LAST:event_LogoutActionPerformed

    private void SettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsActionPerformed
        // TODO add your handling code here:
        Menu.setSelectedIndex(7);
    }//GEN-LAST:event_SettingsActionPerformed

    private void lm_allContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_allContentMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_lm_allContentMouseClicked

    private void dab_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dab_textMouseClicked
        // TODO add your handling code here:
        Menu.setSelectedIndex(0);
        lm_allContent.setBackground(new Color(204, 204, 204));
        lm_addContent.setBackground(new Color(204, 204, 204));
        lm_previewContent.setBackground(new Color(204, 204, 204));

        lm_authors.setBackground(new Color(204, 204, 204));
        lm_newAuthors.setBackground(new Color(204, 204, 204));

    }//GEN-LAST:event_dab_textMouseClicked

    private void lm_addContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_addContentMouseClicked
        // TODO add your handling code here:
        Menu.setSelectedIndex(2);
        lm_allContent.setBackground(new Color(204, 204, 204));
        lm_addContent.setBackground(Color.white);
        lm_previewContent.setBackground(new Color(204, 204, 204));
        lm_authors.setBackground(new Color(204, 204, 204));
        lm_newAuthors.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_lm_addContentMouseClicked

    private void lm_previewContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_previewContentMouseClicked
        // TODO add your handling code here:
        Menu.setSelectedIndex(3);
        lm_allContent.setBackground(new Color(204, 204, 204));
        lm_addContent.setBackground(new Color(204, 204, 204));
        lm_previewContent.setBackground(Color.white);
        lm_authors.setBackground(new Color(204, 204, 204));
        lm_newAuthors.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_lm_previewContentMouseClicked

    private void lm_authorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_authorsMouseClicked
        // TODO add your handling code here:
        loadAuthors();

    }//GEN-LAST:event_lm_authorsMouseClicked

    private void lm_newAuthorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_newAuthorsMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_lm_newAuthorsMouseClicked

    private void lm_allContentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_allContentMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_lm_allContentMouseEntered

    private void lm_allContentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_allContentMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_lm_allContentMouseExited

    private void lm_addContentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_addContentMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_lm_addContentMouseEntered

    private void lm_addContentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_addContentMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lm_addContentMouseExited

    private void lm_addContentMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_addContentMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_lm_addContentMouseMoved

    private void SettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingsMouseClicked
        // TODO add your handling code here:
        Menu.setSelectedIndex(7);
    }//GEN-LAST:event_SettingsMouseClicked


    private void add_content_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_content_submitActionPerformed
        // TODO add your handling code here:

        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        String addTitle = add_title_input.getText();
        String addDesc = add_description_input.getText();
        String image = path.getText();

//pushing content
        try {

            if ("".equals(addTitle)) {
                JOptionPane.showMessageDialog(this, "Please add your title");
            } else if ("".equals(addDesc)) {
                JOptionPane.showMessageDialog(this, "Please add description");
            } else {

                Class.forName("org.mariadb.jdbc.Driver");
                Connection con = DriverManager.getConnection(url, user, passw);
                String insertingToDB = "INSERT INTO `cms`.`content` (`title`, `description`, `author`, `image`) VALUES(?, ?, ?, ?)";

                PreparedStatement st1 = con.prepareStatement(insertingToDB);

                st1.setString(1, addTitle);
                st1.setString(2, addDesc);
                st1.setString(3, username);
                st1.setString(4, image);

                st1.executeUpdate(); // record added. 
                con.close();
                JOptionPane.showMessageDialog(this, "Data stored successfully");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_add_content_submitActionPerformed

    private void attach_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attach_imageActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        path.setText(filename);

    }//GEN-LAST:event_attach_imageActionPerformed

    private void all_contentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_all_contentMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_all_contentMouseClicked

    public int click = 0;

    //A functio for loalding content
    public void loadContent() {

        int count = 0;
        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);

            String query1 = "Select * from `cms`.`content` where author=?";
            PreparedStatement st = con.prepareStatement(query1);

            st.setString(1, username);

            ResultSet result = st.executeQuery();
            while (result.next()) {

                DefaultTableModel tb = (DefaultTableModel) table.getModel();

                tb.setRowCount(0);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);

            String query1 = "Select * from `cms`.`content` where author=?";
            PreparedStatement st = con.prepareStatement(query1);

            st.setString(1, username);

            ResultSet result = st.executeQuery();
            while (result.next()) {
                count++;

                String title = result.getString("title");
                String desc = result.getString("description");
                String like = String.valueOf(result.getInt("like"));
                String dislike = String.valueOf(result.getInt("dislike"));

                String tbData[] = {Integer.toString(count), title, username, like, dislike, desc};
                DefaultTableModel tb = (DefaultTableModel) table.getModel();
                tb.addRow(tbData);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }
    private void lm_ac_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_ac_textMouseClicked
        // TODO add your handling code here:
        click++;
        Menu.setSelectedIndex(1);
        lm_allContent.setBackground(Color.white);
        lm_addContent.setBackground(new Color(204, 204, 204));
        lm_previewContent.setBackground(new Color(204, 204, 204));
        lm_authors.setBackground(new Color(204, 204, 204));
        lm_newAuthors.setBackground(new Color(204, 204, 204));

        loadContent();
    }//GEN-LAST:event_lm_ac_textMouseClicked

    private void all_cont_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_all_cont_deleteActionPerformed
        // TODO add your handling code here:

        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        String newTitle = all_cont_title.getText();
        String newDesc = all_cont_desc.getText();

        int index = table.getSelectedRow();
        TableModel model = table.getModel();
        String oldTitle = model.getValueAt(index, 1).toString();

//pushing content
        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);
            String updateQuery = "DELETE FROM `content` WHERE `content`.`title` = ?";

            PreparedStatement st1 = con.prepareStatement(updateQuery);
            st1.setString(1, oldTitle);

            st1.executeUpdate(); // record added. 
            con.close();
            JOptionPane.showMessageDialog(this, "Data Deleted successfully");
                 DefaultTableModel tb = (DefaultTableModel) table.getModel();

                tb.setRowCount(0);
              
            loadContent();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_all_cont_deleteActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int index = table.getSelectedRow();
        TableModel model = table.getModel();

        String title = model.getValueAt(index, 1).toString();
        String desc = model.getValueAt(index, 5).toString();
        all_cont_title.setText(title);
        all_cont_desc.setText(desc);

    }//GEN-LAST:event_tableMouseClicked

    private void all_cont_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_all_cont_updateActionPerformed
        // TODO add your handling code here:

        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        String newTitle = all_cont_title.getText();
        String newDesc = all_cont_desc.getText();

        int index = table.getSelectedRow();
        TableModel model = table.getModel();
        String oldTitle = model.getValueAt(index, 1).toString();

//pushing content
        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);
            String updateQuery = "UPDATE `content` SET `title` = ?, `description` = ?  WHERE `content`.`title` = ?";

            PreparedStatement st1 = con.prepareStatement(updateQuery);

            st1.setString(1, newTitle);
            st1.setString(2, newDesc);
            st1.setString(3, oldTitle);

            st1.executeUpdate(); // record added. 
            con.close();
            JOptionPane.showMessageDialog(this, "Data Updated successfully");
            loadContent();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_all_cont_updateActionPerformed

    public void loadAuthors() {

        int count = 0;
        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);

            String query1 = "Select * from `cms`.`author`";
            PreparedStatement st = con.prepareStatement(query1);

            ResultSet result = st.executeQuery();
            while (result.next()) {

                DefaultTableModel tb = (DefaultTableModel) all_author_table.getModel();

                tb.setRowCount(0);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);

            String query1 = "Select * from `cms`.`author`";
            PreparedStatement st = con.prepareStatement(query1);

//            st.setString(1, username);
            ResultSet result = st.executeQuery();
            while (result.next()) {
                count++;

                String author = result.getString("username");
                String email = result.getString("email");

                String tbData[] = {Integer.toString(count), author, email};
                DefaultTableModel tb = (DefaultTableModel) all_author_table.getModel();
                tb.addRow(tbData);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }
    private void all_author_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_all_author_deleteActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        int index = all_author_table.getSelectedRow();
        TableModel model = all_author_table.getModel();
        String username = model.getValueAt(index, 1).toString();

//deleting author
        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);
            String updateQuery = "DELETE FROM `author` WHERE `author`.`username` = ?";

            PreparedStatement st1 = con.prepareStatement(updateQuery);
            st1.setString(1, username);

            st1.executeUpdate(); // record added. 
            con.close();
            JOptionPane.showMessageDialog(this, "Author Deleted successfully");
            DefaultTableModel tb = (DefaultTableModel) all_author_table.getModel();

            tb.setRowCount(0);

            loadAuthors();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_all_author_deleteActionPerformed

    private void all_author_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_all_author_tableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_all_author_tableMouseClicked

    private void authorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_authorsMouseClicked
        // TODO add your handling code here:
        loadAuthors();
    }//GEN-LAST:event_authorsMouseClicked

    private void lm_a_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_a_textMouseClicked
        // TODO add your handling code here:
        Menu.setSelectedIndex(4);
        lm_allContent.setBackground(new Color(204, 204, 204));
        lm_addContent.setBackground(new Color(204, 204, 204));
        lm_previewContent.setBackground(new Color(204, 204, 204));
        lm_authors.setBackground(Color.white);
        lm_newAuthors.setBackground(new Color(204, 204, 204));

        loadAuthors();
    }//GEN-LAST:event_lm_a_textMouseClicked

    private void add_new_approveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_new_approveActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        int index = newAuthorTable.getSelectedRow();
        TableModel model = newAuthorTable.getModel();
        String na_email = model.getValueAt(index, 2).toString();

        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);
            String approveQuery1 = "Select * from `cms`.`pr_authors` where `pr_authors`.`email` = ?";

            PreparedStatement st1 = con.prepareStatement(approveQuery1);
            st1.setString(1, na_email);

            ResultSet result = st1.executeQuery();
            while (result.next()) {
                String username = result.getString("username");
                String question = result.getString("question");
                String answer = result.getString("answer");
                String email = result.getString("email");
                String password = result.getString("password");

                try {

                    String approveQuery2 = "INSERT INTO `cms`.`author` (`username`, `question`, `answer`, `email`, `password`) VALUES(?, ?, ?, ?, ?)";

                    PreparedStatement st2 = con.prepareStatement(approveQuery2);

                    st2.setString(1, username);
                    st2.setString(2, question);
                    st2.setString(3, answer);
                    st2.setString(4, email);
                    st2.setString(5, password);

                    st2.executeUpdate(); // record added. 

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }

                String approveQuery3 = "DELETE FROM `pr_authors` WHERE `pr_authors`.`email` = ?";

                PreparedStatement st3 = con.prepareStatement(approveQuery3);
                st3.setString(1, na_email);

                st3.executeUpdate(); // record added. 
                con.close();

                JOptionPane.showMessageDialog(this, "Approved successfully");
                DefaultTableModel tb = (DefaultTableModel) newAuthorTable.getModel();

                tb.setRowCount(0);
                loadNewAuthor();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }


    }//GEN-LAST:event_add_new_approveActionPerformed

    private void add_new_disapproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_new_disapproveActionPerformed
        // TODO add your handling code here:

        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        int index = newAuthorTable.getSelectedRow();
        TableModel model = newAuthorTable.getModel();
        String na_email = model.getValueAt(index, 2).toString();

        try {
            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);
            String approveQuery3 = "DELETE FROM `pr_authors` WHERE `pr_authors`.`email` = ?";

            PreparedStatement st3 = con.prepareStatement(approveQuery3);
            st3.setString(1, na_email);

            st3.executeUpdate(); // record added. 
            DefaultTableModel tb = (DefaultTableModel) newAuthorTable.getModel();

            tb.setRowCount(0);
            loadNewAuthor();
            JOptionPane.showMessageDialog(this, "Author Request Denied");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }


    }//GEN-LAST:event_add_new_disapproveActionPerformed

    private void newAuthorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAuthorTableMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_newAuthorTableMouseClicked

    public void loadNewAuthor() {

        int count = 0;
        String url = "jdbc:mariadb://127.0.0.1:3306/cms";
        String user = "root";
        String passw = "";

        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);

            String query1 = "Select * from `cms`.`pr_authors`";
            PreparedStatement st = con.prepareStatement(query1);

            ResultSet result = st.executeQuery();
            while (result.next()) {

                DefaultTableModel tb = (DefaultTableModel) newAuthorTable.getModel();

                tb.setRowCount(0);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        try {

            Class.forName("org.mariadb.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, passw);

            String query1 = "Select * from `cms`.`pr_authors`";
            PreparedStatement st = con.prepareStatement(query1);

//            st.setString(1, username);
            ResultSet result = st.executeQuery();
            while (result.next()) {
                count++;

                String author = result.getString("username");
                String email = result.getString("email");

                String tbData[] = {Integer.toString(count), author, email};
                DefaultTableModel tb = (DefaultTableModel) newAuthorTable.getModel();
                tb.addRow(tbData);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }
    private void lm_na_textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lm_na_textMouseClicked
        // TODO add your handling code here:
        Menu.setSelectedIndex(5);
        new_authors.setBackground(new Color(204, 204, 204));
        lm_allContent.setBackground(new Color(204, 204, 204));
        lm_addContent.setBackground(new Color(204, 204, 204));
        lm_previewContent.setBackground(new Color(204, 204, 204));
        lm_authors.setBackground(new Color(204, 204, 204));
        lm_newAuthors.setBackground(Color.white);

        loadNewAuthor();
    }//GEN-LAST:event_lm_na_textMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Logout;
    private javax.swing.JTabbedPane Menu;
    private javax.swing.JPopupMenu PopUp;
    private javax.swing.JMenuItem Settings;
    private javax.swing.JPanel add_content;
    private javax.swing.JButton add_content_submit;
    private javax.swing.JLabel add_description;
    private javax.swing.JTextArea add_description_input;
    private javax.swing.JLabel add_image;
    private javax.swing.JButton add_new_approve;
    private javax.swing.JButton add_new_disapprove;
    private javax.swing.JLabel add_title;
    private javax.swing.JTextField add_title_input;
    private javax.swing.JPanel addab_settings;
    private javax.swing.JLabel admin_logo;
    private javax.swing.JButton all_author_delete;
    private javax.swing.JTable all_author_table;
    private javax.swing.JButton all_cont_delete;
    private javax.swing.JTextArea all_cont_desc;
    private javax.swing.JTextField all_cont_title;
    private javax.swing.JButton all_cont_update;
    private javax.swing.JPanel all_content;
    private javax.swing.JButton attach_image;
    private javax.swing.JPanel authors;
    private javax.swing.JLabel dab_text;
    private javax.swing.JPanel dashboard;
    private javax.swing.JPanel header_panel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel left_menu;
    private javax.swing.JLabel lm_a_text;
    private javax.swing.JLabel lm_ac_text;
    private javax.swing.JLabel lm_adc_text;
    private javax.swing.JPanel lm_addContent;
    private javax.swing.JPanel lm_allContent;
    private javax.swing.JPanel lm_authors;
    private javax.swing.JLabel lm_na_text;
    private javax.swing.JPanel lm_newAuthors;
    private javax.swing.JLabel lm_pc_text;
    private javax.swing.JPanel lm_previewContent;
    public javax.swing.JLabel log_user;
    private javax.swing.JTable newAuthorTable;
    private javax.swing.JPanel new_authors;
    private javax.swing.JLabel path;
    private javax.swing.JPanel preveiw_content;
    private javax.swing.JLabel settings_text;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
